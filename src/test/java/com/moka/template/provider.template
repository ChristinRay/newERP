package ${providerPackage};

import org.apache.ibatis.jdbc.SQL;
import com.google.common.base.Strings;
import java.util.Objects;
import ${modelPackage}.${tableClass};

/**
 * ${tableComment}
 * provider
 */
public class ${tableClass}Provider {
	
	/**
	 * 插入操作
	 * @param entity
	 * @return
	 */
	public String insert${tableClass}(${tableClass} entity) {
		SQL sql = new SQL().INSERT_INTO("${table}");
		sql.VALUES("${columnsStr}", "${propertyErsStr}");
		return sql.toString();
	}
	/**
	 * 按条件查询总记录数
	 * @param entity
	 * @return
	 */
	public String select${tableClass}ByCount(${tableClass} entity) {
		SQL sql = new SQL().SELECT("count(*)").FROM("${table}");
		${propWhereStr}
		return sql.toString();
	}
	/**
	 * 按条件分页查询
	 * @param entity
	 * @param orderBy
	 * @param limit
	 * @param limitLen
	 * @return
	 */
	public String select${tableClass}ByLimt(${tableClass} entity) {
		SQL sql = new SQL().SELECT("*").FROM("${table}");
		${propWhereStr}
		return sql.toString() + " order by " + entity.getOrderBy() + " desc limit " + entity.getLimit() + "," + entity.getLimitLen();
	}
	/**
	 * 按条件查询记录
	 * @param entity
	 * @return
	 */
	public String select${tableClass}(${tableClass} entity) {
		SQL sql = new SQL().SELECT("*").FROM("${table}");
		${propWhereStr}
		return sql.toString();
	}
	/**
	 * 根据主键id查询实体
	 * @param id
	 * @return
	 */
	public String selectOne(int id) {
		SQL sql = new SQL().SELECT("*").FROM("${table}");
		sql.WHERE("${primaryKey}="+id);
		return sql.toString();
	}
	/**
	 * 更新实体
	 * @param entity
	 * @return
	 */
	public String update${tableClass}(${tableClass} entity) {
		SQL sql = new SQL().UPDATE("${table}");
		${propSetStr}
		sql.WHERE("${primaryKey} = #{${primaryKey}}");
		return sql.toString();
	}
	/**
	 * 更新实体，过滤空值
	 * @param entity
	 * @return
	 */
	public String update${tableClass}ByNullChk(${tableClass} entity) {
		SQL sql = new SQL().UPDATE("${table}");
		${propWhereSetStr}
		sql.WHERE("${primaryKey} = #{${primaryKey}}");
		return sql.toString();
	}
	/**
	 * 物理删除实体
	 * @param id
	 * @return
	 */
	public String delete${tableClass}(int id) {
		SQL sql = new SQL().DELETE_FROM("${table}");
		sql.WHERE("${primaryKey} = #{${primaryKey}}");
		return sql.toString();
	}
	/**
	 * 逻辑删除实体
	 * @param entity
	 * @return
	 */
	public String deleteByLogic(int id) {
		SQL sql = new SQL().UPDATE("${table}");
		sql.SET("state=2");
		sql.WHERE("${primaryKey} = #{${primaryKey}}");
		return sql.toString();
	}
}
